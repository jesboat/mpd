bin_PROGRAMS = mpd
SUBDIRS = $(MP4FF_SUBDIR)

mpd_audioOutputs = \
	audioOutputs/audioOutput_shout.c \
	audioOutputs/audioOutput_null.c \
	audioOutputs/audioOutput_fifo.c \
	audioOutputs/audioOutput_alsa.c \
	audioOutputs/audioOutput_ao.c \
	audioOutputs/audioOutput_oss.c \
	audioOutputs/audioOutput_osx.c \
	audioOutputs/audioOutput_pulse.c \
	audioOutputs/audioOutput_mvp.c \
	audioOutputs/audioOutput_jack.c

mpd_inputPlugins = \
	inputPlugins/_flac_common.c \
	inputPlugins/_ogg_common.c \
	inputPlugins/oggflac_plugin.c \
	inputPlugins/oggvorbis_plugin.c \
	inputPlugins/aac_plugin.c \
	inputPlugins/audiofile_plugin.c \
	inputPlugins/flac_plugin.c \
	inputPlugins/mod_plugin.c \
	inputPlugins/mp3_plugin.c \
	inputPlugins/mp4_plugin.c \
	inputPlugins/mpc_plugin.c \
	inputPlugins/wavpack_plugin.c


mpd_headers = \
	ack.h \
	action_status.h \
	audio.h \
	audioOutput.h \
	buffer2array.h \
	charConv.h \
	command.h \
	condition.h \
	conf.h \
	dbUtils.h \
	decode.h \
	directory.h \
	gcc.h \
	inputPlugin.h \
	inputPlugins/_flac_common.h \
	inputPlugins/_ogg_common.h \
	inputStream.h \
	inputStream_file.h \
	inputStream_http.h \
	inputStream_http_auth.h \
	interface.h \
	list.h \
	listen.h \
	log.h \
	ls.h \
	main_notify.h \
	metadata_pipe.h \
	mpd_types.h \
	myfprintf.h \
	normalize.h \
	compress.h \
	os_compat.h \
	outputBuffer.h \
	outputBuffer_config_init.h \
	outputBuffer_accessors.h \
	outputBuffer_audio.h \
	outputBuffer_ob_send.h \
	outputBuffer_xfade.h \
	path.h \
	pcm_utils.h \
	permission.h \
	player_error.h \
	playlist.h \
	replayGain.h \
	ringbuf.h \
	signal_check.h \
	sig_handlers.h \
	sllist.h \
	song.h \
	state_file.h \
	stats.h \
	tag.h \
	tag_id3.h \
	tagTracker.h \
	utf8.h \
	utils.h \
	volume.h \
	ioops.h \
	zeroconf.h \
	locate.h \
	storedPlaylist.h \
	timer.h


mpd_SOURCES = \
	$(mpd_headers) \
	$(mpd_audioOutputs) \
	$(mpd_inputPlugins) \
	audio.c \
	audioOutput.c \
	buffer2array.c \
	charConv.c \
	command.c \
	condition.c \
	conf.c \
	dbUtils.c \
	decode.c \
	directory.c \
	inputPlugin.c \
	inputStream.c \
	inputStream_file.c \
	inputStream_http.c \
	interface.c \
	ioops.c \
	list.c \
	listen.c \
	log.c \
	ls.c \
	main.c \
	main_notify.c \
	metadata_pipe.c \
	myfprintf.c \
	normalize.c \
	compress.c \
	outputBuffer.c \
	path.c \
	pcm_utils.c \
	permission.c \
	player_error.c \
	playlist.c \
	replayGain.c \
	ringbuf.c \
	sig_handlers.c \
	signal_check.c \
	sllist.c \
	song.c \
	state_file.c \
	stats.c \
	tag.c \
	tag_id3.c \
	tagTracker.c \
	utils.c \
	volume.c \
	utf8.c \
	zeroconf.c \
	locate.c \
	storedPlaylist.c \
	timer.c


mpd_CFLAGS = $(MPD_CFLAGS)
mpd_LDADD = $(MPD_LIBS) $(MP4FF_LIB)

DIST_SUBDIRS = mp4ff

# sparse is a semantic parser
# URL: git://www.kernel.org/pub/scm/devel/sparse/sparse.git
SPARSE = sparse
SPARSE_FLAGS =
sparse-check:
	for i in $(mpd_SOURCES); \
	do \
		$(SPARSE) -I. $(mpd_CFLAGS) $(SPARSE_FLAGS) $(srcdir)/$$i || exit; \
	done

TEST_CFLAGS = -DUNIT_TEST
TEST_FILES := $(shell grep UNIT_TEST \
               $(addprefix $(srcdir)/, $(mpd_SOURCES)) | \
               awk -F: '{print $$1}' | uniq)

test: $(addprefix test-, $(subst .c,,$(TEST_FILES)))

test-%: %.c
	$(CC) $(CFLAGS) $(TEST_CFLAGS) -o $@ $<
	@./$@
	@echo $@: OK

.PHONY: sparse-check test
